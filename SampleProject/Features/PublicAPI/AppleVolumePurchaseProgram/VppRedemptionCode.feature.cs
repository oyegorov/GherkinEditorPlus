// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.42000
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Soti.MobiControl.Bdd.PublicApiTests.Features.PublicAPI.AppleVolumePurchaseProgram
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("VPP Redemption Code")]
    public partial class VPPRedemptionCodeFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "VppRedemptionCode.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "VPP Redemption Code", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("I am a user with name \'Administrator\' and password \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProductName",
                        "ProductIdentifier",
                        "BundleIdentifier",
                        "Price"});
            table1.AddRow(new string[] {
                        "Tetris",
                        "479943969",
                        "com.ea.tetris2011.inc",
                        "0.99"});
#line 5
 testRunner.And(@"I have created an App Catalog rule with name 'autogenerate AppCatalogRuleName.{guid}' and using VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_original.xls' for the following product:", ((string)(null)), table1, "And ");
#line 8
 testRunner.And("I modify the database to set the first 3 redemption codes to Redeemed and the nex" +
                    "t 3 redemption codes to Pending Redemption", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload a redemption code spreadsheet with the same or more redeemed codes or more" +
            " available codes (TC 47678)")]
        [NUnit.Framework.CategoryAttribute("CleanDatabaseForVppRedemptionCodes")]
        [NUnit.Framework.TestCaseAttribute("file:\\\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\Redem" +
            "ptionCodes\\VppRedemptionCodes_3.xls", null)]
        [NUnit.Framework.TestCaseAttribute("file:\\\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\Redem" +
            "ptionCodes\\VppRedemptionCodes_4.xls", null)]
        [NUnit.Framework.TestCaseAttribute("file:\\\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\Redem" +
            "ptionCodes\\VppRedemptionCodes_6.xls", null)]
        public virtual void UploadARedemptionCodeSpreadsheetWithTheSameOrMoreRedeemedCodesOrMoreAvailableCodesTC47678(string redemptionCodeSpreadsheetLocation, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CleanDatabaseForVppRedemptionCodes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload a redemption code spreadsheet with the same or more redeemed codes or more" +
                    " available codes (TC 47678)", @__tags);
#line 11
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 12
 testRunner.Given(string.Format("I upload VPP redemption codes from \'{0}\' for the application with name \'Tetris\' a" +
                        "nd bundle identifier \'com.ea.tetris2011.inc\' in App Catalog rule named \'AppCatal" +
                        "ogRuleName.{{guid}}\'", redemptionCodeSpreadsheetLocation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("The last upload of VPP redemption codes succeeded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload a redemption code spreadsheet with fewer or different redeemed codes (TC 4" +
            "7678)")]
        [NUnit.Framework.CategoryAttribute("CleanDatabaseForVppRedemptionCodes")]
        [NUnit.Framework.TestCaseAttribute("file:\\\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\Redem" +
            "ptionCodes\\VppRedemptionCodes_2.xls", null)]
        [NUnit.Framework.TestCaseAttribute("file:\\\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\Redem" +
            "ptionCodes\\VppRedemptionCodes_5.xls", null)]
        public virtual void UploadARedemptionCodeSpreadsheetWithFewerOrDifferentRedeemedCodesTC47678(string redemptionCodeSpreadsheetLocation, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "CleanDatabaseForVppRedemptionCodes"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload a redemption code spreadsheet with fewer or different redeemed codes (TC 4" +
                    "7678)", @__tags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 23
 testRunner.Given(string.Format("I upload VPP redemption codes from \'{0}\' for the application with name \'Tetris\' a" +
                        "nd bundle identifier \'com.ea.tetris2011.inc\' in App Catalog rule named \'AppCatal" +
                        "ogRuleName.{{guid}}\'", redemptionCodeSpreadsheetLocation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
 testRunner.Then("The last upload of VPP redemption codes failed because the spreadsheet is out of " +
                    "date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.When(string.Format("I upload VPP redemption codes from \'{0}\' for the application with name \'Tetris\' a" +
                        "nd bundle identifier \'com.ea.tetris2011.inc\' in App Catalog rule named \'AppCatal" +
                        "ogRuleName.{{guid}}\' and acknowledge the codes are out of date", redemptionCodeSpreadsheetLocation), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("The last upload of VPP redemption codes succeeded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload a redemption code spreadsheet for a different application name (TC 47678)")]
        [NUnit.Framework.CategoryAttribute("CleanDatabaseForVppRedemptionCodes")]
        public virtual void UploadARedemptionCodeSpreadsheetForADifferentApplicationNameTC47678()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload a redemption code spreadsheet for a different application name (TC 47678)", new string[] {
                        "CleanDatabaseForVppRedemptionCodes"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 35
 testRunner.Given(@"I upload VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_7.xls' for the application with name 'Tetris' and bundle identifier 'com.ea.tetris2011.inc' in App Catalog rule named 'AppCatalogRuleName.{guid}'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.Then("The last upload of VPP redemption codes failed because the spreadsheet is for a d" +
                    "ifferent application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 37
 testRunner.When(@"I upload VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_7.xls' for the application with name 'Tetris' and bundle identifier 'com.ea.tetris2011.inc' in App Catalog rule named 'AppCatalogRuleName.{guid}' and acknowledge the codes are for a different application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("The last upload of VPP redemption codes succeeded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload a redemption code spreadsheet for a different application name with fewer " +
            "redeemed codes (TC 47678)")]
        [NUnit.Framework.CategoryAttribute("CleanDatabaseForVppRedemptionCodes")]
        public virtual void UploadARedemptionCodeSpreadsheetForADifferentApplicationNameWithFewerRedeemedCodesTC47678()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload a redemption code spreadsheet for a different application name with fewer " +
                    "redeemed codes (TC 47678)", new string[] {
                        "CleanDatabaseForVppRedemptionCodes"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 42
 testRunner.Given(@"I upload VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_1.xls' for the application with name 'Tetris' and bundle identifier 'com.ea.tetris2011.inc' in App Catalog rule named 'AppCatalogRuleName.{guid}'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 43
 testRunner.Then("The last upload of VPP redemption codes failed because the spreadsheet is for a d" +
                    "ifferent application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 44
 testRunner.When(@"I upload VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_1.xls' for the application with name 'Tetris' and bundle identifier 'com.ea.tetris2011.inc' in App Catalog rule named 'AppCatalogRuleName.{guid}' and acknowledge the codes are for a different application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.Then("The last upload of VPP redemption codes failed because the spreadsheet is out of " +
                    "date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 46
 testRunner.When(@"I upload VPP redemption codes from 'file:\\storage\\qaShare\\BDD_IntegrationTests_Data\\AppleVolumePurchaseProgram\\RedemptionCodes\\VppRedemptionCodes_1.xls' for the application with name 'Tetris' and bundle identifier 'com.ea.tetris2011.inc' in App Catalog rule named 'AppCatalogRuleName.{guid}' and acknowledge the codes are out of date and for a different application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("The last upload of VPP redemption codes succeeded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
